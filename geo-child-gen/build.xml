<project name="geochildgen" default="dist" basedir=".">
    <description>
        Ant Build File for the GeoChildGenTool
    </description>

    <property file="build.properties"/>

    <property name="src" location="src"/>
    <property name="test-src" location="srcTest"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="target_jar" value="geochildgen.jar"/>

    <path id="classpath">
        <pathelement location="${bc-commons-path}/dist/${bc-commons-jar}"/>
        <pathelement location="${bc-webapp-path}/dist/${bc-webapp-jar}"/>
        <pathelement location="${childgen-path}/dist/childgen.jar"/>
        <pathelement location="${apache-dbcp-path}/${apache-dbcp-jar}"/>
        <pathelement location="${apache-pool-path}/${apache-pool-jar}"/>
        <pathelement location="${jdbc-path}/${jdbc-jar}"/>
        <pathelement location="${apache-collections-path}/${apache-collections-jar}"/>
        <pathelement location="${beam-modules-path}/${beam-core-jar}"/>
        <pathelement location="${beam-modules-path}/${ceres-core-jar}"/>        
        <pathelement location="${beam-modules-path}/${ascii-writer-jar}"/>
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        <mkdir dir="${build}/classes"/>
        <mkdir dir="${build}/test"/>
        <mkdir dir="${build}/report"/>
        <mkdir dir="${build}/zip/geochildgen"/>
        <mkdir dir="${build}/zip/geochildgen/lib"/>
        <mkdir dir="${dist}"/>
    </target>

    <target name="compile" depends="init" description="compile the source">
        <javac srcdir="${src}" destdir="${build}/classes" target="${java-target}" source="${java-target}">
            <classpath>
                <path refid="classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile" description="compile and run the tests, prepare reports">
        <javac srcdir="${test-src}" destdir="${build}/test" target="${java-target}" source="${java-target}">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${build}/classes"/>
            </classpath>
        </javac>

        <copy todir="${build}/test">
            <fileset dir="${src}">
                <include name="**/*"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>

        <junit printsummary="yes" fork="true" forkmode="once" dir="../">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${build}/classes"/>
                <pathelement location="${build}/test"/>
            </classpath>

            <formatter type="xml"/>
            <!-- note: junit batchtest should not stop the script if a test fails - first junitreport needs
                 to run, then the script will be manually stopped. -->
            <batchtest failureproperty="junit-failed" haltonfailure="no" haltonerror="no" todir="${build}/test">
                <fileset dir="${test-src}">
                    <include name="**/*Test*.java"/>
                    <exclude name="**/AllTests.java"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${build}/report">
            <fileset dir="${build}/test">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${build}/report"/>
        </junitreport>

        <fail if="junit-failed" message="JUnit Tests failed"/>
    </target>

    <target name="dist" depends="compile, test">
        <jar jarfile="${dist}/${target_jar}" basedir="${build}/classes"/>

        <copy todir="${build}/zip/geochildgen/lib" file="${dist}/${target_jar}" verbose="true" failonerror="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${bc-commons-path}/dist/${bc-commons-jar}" verbose="true"
              failonerror="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${bc-webapp-path}/dist/${bc-webapp-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${apache-dbcp-path}/${apache-dbcp-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${apache-pool-path}/${apache-pool-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${apache-collections-path}/${apache-collections-jar}"
              verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${childgen-path}/dist/${childgen-jar}"
              verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${jdbc-path}/${jdbc-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${beam-modules-path}/${beam-core-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${beam-lib-path}/${jai-core-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${beam-modules-path}/${ceres-core-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${beam-modules-path}/${envisat-reader-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${beam-lib-path}/${jama-jar}" verbose="true"/>
        <copy todir="${build}/zip/geochildgen/lib" file="${beam-lib-path}/${jdom-jar}" verbose="true"/>

        <delete file="geochildgen.bat"/>
        <copy file="geochildgen_ant.bat" tofile="geochildgen.bat"/>
        <replace file="geochildgen.bat" token="{{geochildgen-jar}}" value="${target_jar}"/>
        <replace file="geochildgen.bat" token="{{beam-jar}}" value="${beam-core-jar}"/>
        <replace file="geochildgen.bat" token="{{bc-commons-jar}}" value="${bc-commons-jar}"/>
        <replace file="geochildgen.bat" token="{{bc-webapp-jar}}" value="${bc-webapp-jar}"/>
        <replace file="geochildgen.bat" token="{{merci-childgen-jar}}" value="${childgen-jar}"/>
        <replace file="geochildgen.bat" token="{{jai-core-jar}}" value="${jai-core-jar}"/>
        <replace file="geochildgen.bat" token="{{apache-dbcp-jar}}" value="${apache-dbcp-jar}"/>
        <replace file="geochildgen.bat" token="{{apache-pool-jar}}" value="${apache-pool-jar}"/>
        <replace file="geochildgen.bat" token="{{apache-collections-jar}}" value="${apache-collections-jar}"/>
        <replace file="geochildgen.bat" token="{{jdbc-jar}}" value="${jdbc-jar}"/>
        <replace file="geochildgen.bat" token="{{ceres-core-jar}}" value="${ceres-core-jar}"/>
        <replace file="geochildgen.bat" token="{{ceres-glayer-jar}}" value="${ceres-glayer-jar}"/>
        <replace file="geochildgen.bat" token="{{envisat-reader-jar}}" value="${envisat-reader-jar}"/>
        <replace file="geochildgen.bat" token="{{jama-jar}}" value="${jama-jar}"/>

        <delete file="geochildgen.sh"/>
        <copy file="geochildgen_ant.sh" tofile="geochildgen.sh"/>
        <replace file="geochildgen.sh" token="{{geochildgen-jar}}" value="${target_jar}"/>
        <replace file="geochildgen.sh" token="{{beam-jar}}" value="${beam-core-jar}"/>
        <replace file="geochildgen.sh" token="{{bc-commons-jar}}" value="${bc-commons-jar}"/>
        <replace file="geochildgen.sh" token="{{bc-webapp-jar}}" value="${bc-webapp-jar}"/>
        <replace file="geochildgen.sh" token="{{merci-childgen-jar}}" value="${childgen-jar}"/>
        <replace file="geochildgen.sh" token="{{jai-core-jar}}" value="${jai-core-jar}"/>
        <replace file="geochildgen.sh" token="{{apache-dbcp-jar}}" value="${apache-dbcp-jar}"/>
        <replace file="geochildgen.sh" token="{{apache-pool-jar}}" value="${apache-pool-jar}"/>
        <replace file="geochildgen.sh" token="{{apache-collections-jar}}" value="${apache-collections-jar}"/>
        <replace file="geochildgen.sh" token="{{jdbc-jar}}" value="${jdbc-jar}"/>
        <replace file="geochildgen.sh" token="{{ceres-core-jar}}" value="${ceres-core-jar}"/>
        <replace file="geochildgen.sh" token="{{ceres-glayer-jar}}" value="${ceres-glayer-jar}"/>
        <replace file="geochildgen.sh" token="{{envisat-reader-jar}}" value="${envisat-reader-jar}"/>
        <replace file="geochildgen.sh" token="{{jama-jar}}" value="${jama-jar}"/>

        <copy todir="${build}/zip/geochildgen">
            <fileset dir=".">
                <include name="geochildgen.bat"/>
                <include name="geochildgen.properties"/>
                <include name="splitOrbit.bat"/>
                <include name="changelog.txt"/>
            </fileset>
        </copy>
        <concat destfile="${build}/zip/geochildgen/geochildgen.sh" eol="unix">
            <fileset dir=".">
                <include name="geochildgen.sh"/>
            </fileset>
        </concat>
        <concat destfile="${build}/zip/geochildgen/splitOrbit.sh" eol="unix">
            <fileset dir=".">
                <include name="splitOrbit.sh"/>
            </fileset>
        </concat>

        <zip basedir="${build}/zip" file="${dist}/geochildgen.zip">
        </zip>
    </target>

    <target name="clean">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>